generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// =========================================================================
// ENUMERACIONES DEL SISTEMA CORE
// =========================================================================

enum UserRole {
  SUPERADMIN           // Administrador del sistema
  CONCURSO_ADMIN       // Administrador de compañía
  REGISTRADOR          // Registrador de participantes
}

enum SubscriptionStatus {
  ACTIVO
  EXPIRADO
  SUSPENDIDO
  CANCELADO
}

enum SubscriptionPlan {
  BASICO
  PROFESIONAL
  EMPRESARIAL
}

enum CompanyRequestStatus {
  PENDIENTE            // Solicitud enviada, esperando aprobación
  APROBADA             // Solicitud aprobada, compañía creada
  RECHAZADA            // Solicitud rechazada
  EN_REVISION          // En proceso de revisión
}

// =========================================================================
// ENUMERACIONES FUTURAS (COMENTADAS PARA EXPANSIÓN)
// =========================================================================

// enum SexoGanado {
//   MACHO                // Ganado macho
//   HEMBRA               // Ganado hembra
//   SIN_RESTRICCION      // Para categorías sin restricción de sexo
// }

// enum EstadoConcurso {
//   BORRADOR             // En preparación
//   INSCRIPCIONES_ABIERTAS // Aceptando inscripciones
//   INSCRIPCIONES_CERRADAS // Inscripciones cerradas
//   EN_EVALUACION        // En proceso de calificación
//   FINALIZADO           // Concurso terminado
// }

// enum TipoConcurso {
//   GANADO               // Concurso de ganado
//   PRODUCTO             // Concurso de productos (café, lácteos, etc.)
//   MIXTO                // Concurso que acepta ambos
// }

// enum TipoEvento {
//   CONFERENCIA
//   TALLER
//   FERIA
//   EXPOSICION
//   NETWORKING
//   PREMIACION
// }

// =========================================================================
// MODELO DE USUARIO (CORE)
// =========================================================================

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  nombre    String
  apellido  String
  telefono  String?
  role      UserRole @default(REGISTRADOR)
  companyId String?
  company   Company? @relation(fields: [companyId], references: [id])
  isActive  Boolean  @default(true)
  
  // Campos adicionales para SUPERADMIN
  isSuperAdmin Boolean @default(false)   // Flag adicional de seguridad
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relaciones esenciales
  passwordResetTokens     PasswordResetToken[]
  companyRequestsReviewed CompanyRequest[]

  @@map("users")
}

// =========================================================================
// MODELO PARA TOKENS DE RESET DE CONTRASEÑA
// =========================================================================

model PasswordResetToken {
  id        String   @id @default(cuid())
  token     String   @unique
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  expiresAt DateTime
  used      Boolean  @default(false)
  createdAt DateTime @default(now())

  @@index([token])
  @@index([userId])
  @@map("password_reset_tokens")
}

// =========================================================================
// MODELO DE COMPAÑÍA
// =========================================================================

model Company {
  id          String             @id @default(cuid())
  nombre      String
  slug        String             @unique
  email       String
  telefono    String?
  direccion   String?
  logo        String?
  descripcion String?
  website     String?
  ubicacion   String?
  isFeatured  Boolean            @default(false)
  isPublished Boolean            @default(false)
  isActive    Boolean            @default(true)
  
  // Información adicional
  tipoOrganizacion String?        // Tipo de organización
  
  createdAt   DateTime           @default(now())
  updatedAt   DateTime           @updatedAt

  // Suscripción
  subscription   Subscription?
  subscriptionId String?       @unique

  // Relaciones
  users     User[]
  
  // Solicitud original (si fue creada por solicitud)
  companyRequest CompanyRequest?

  @@map("companies")
}

// =========================================================================
// MODELO DE SUSCRIPCIÓN
// =========================================================================

model Subscription {
  id                String             @id @default(cuid())
  companyId         String             @unique
  company           Company            @relation(fields: [companyId], references: [id])
  plan              SubscriptionPlan   @default(BASICO)
  status            SubscriptionStatus @default(ACTIVO)
  maxUsers          Int                @default(5)    // Límite de usuarios
  usersUsed         Int                @default(0)    // Usuarios utilizados
  maxStorage        Int                @default(1000) // Límite de almacenamiento en MB
  storageUsed       Int                @default(0)    // Almacenamiento utilizado
  fechaInicio       DateTime           @default(now())
  fechaExpiracion   DateTime
  fechaRenovacion   DateTime?
  precio            Decimal            @db.Decimal(10, 2)
  notas             String?
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt

  @@map("subscriptions")
}

// =========================================================================
// MODELO DE SOLICITUDES DE COMPAÑÍA
// =========================================================================

model CompanyRequest {
  id                String               @id @default(cuid())
  // Información del solicitante
  nombre            String
  apellido          String
  email             String               @unique
  telefono          String?
  
  // Información de la compañía solicitada
  nombreCompania    String
  descripcionCompania String?
  tipoOrganizacion  String?              // "Asociación Ganadera", "Cooperativa", etc.
  ubicacion         String?
  website           String?
  
  // Documentación de soporte
  documentos        String[]             // URLs de documentos subidos
  motivacion        String?              // Por qué quiere crear la compañía
  experiencia       String?              // Experiencia previa organizando eventos
  
  // Estado de la solicitud
  status            CompanyRequestStatus @default(PENDIENTE)
  notas             String?              // Notas del revisor
  
  // Relaciones
  reviewedById      String?              // SUPERADMIN que revisó
  reviewedBy        User?                @relation(fields: [reviewedById], references: [id])
  reviewedAt        DateTime?
  
  // Compañía creada (si fue aprobada)
  companyId         String?              @unique
  company           Company?             @relation(fields: [companyId], references: [id])
  
  createdAt         DateTime             @default(now())
  updatedAt         DateTime             @updatedAt

  @@index([status])
  @@index([email])
  @@map("company_requests")
}

// =========================================================================
// MODELOS FUTUROS PARA EXPANSIÓN (COMENTADOS)
// =========================================================================

// =========================================================================
// MODELO DE CONCURSO MEJORADO
// =========================================================================

// model Concurso {
//   id           String          @id @default(cuid())
//   nombre       String
//   slug         String          @unique
//   descripcion  String?
//   tipo         TipoConcurso    @default(GANADO)
//   estado       EstadoConcurso  @default(BORRADOR)
//   fechaInicio  DateTime
//   fechaFin     DateTime
//   fechaInscripcionInicio DateTime?
//   fechaInscripcionFin    DateTime?
//   ubicacion    String?
//   direccion    String?
//   premios      String?
//   reglamento   String?
//   imagen       String?
//   isPublished  Boolean         @default(false)
//   isFeatured   Boolean         @default(false)
//   companyId    String
//   company      Company         @relation(fields: [companyId], references: [id])
//   createdById  String
//   createdBy    User            @relation("ConcursoCreator", fields: [createdById], references: [id])
//   createdAt    DateTime        @default(now())
//   updatedAt    DateTime        @updatedAt

//   // Relaciones
//   categorias            ConcursoCategoria[]
//   participantes         Participante[]
//   concursoRegistradores ConcursoRegistrador[]
//   events                Event[]

//   @@index([companyId])
//   @@map("concursos")
// }

// =========================================================================
// MODELO DE CATEGORÍA DE CONCURSO (ESPECÍFICA POR CONCURSO)
// =========================================================================

// model ConcursoCategoria {
//   id          String      @id @default(cuid())
//   nombre      String
//   descripcion String?
//   orden       Int         @default(0)
//   sexo        SexoGanado? // Para concursos de ganado
//   edadMinima  Int?        // Edad mínima en días (opcional)
//   edadMaxima  Int?        // Edad máxima en días (opcional)
  
//   // Para concursos de productos
//   tipoProducto String?    // Ej: "Café Arábica", "Queso Fresco"
//   criterios    String?    // Criterios de evaluación específicos
  
//   concursoId  String
//   concurso    Concurso    @relation(fields: [concursoId], references: [id], onDelete: Cascade)
//   createdAt   DateTime    @default(now())
//   updatedAt   DateTime    @updatedAt

//   // Relaciones
//   participantes Participante[]

//   @@index([concursoId])
//   @@map("concurso_categorias")
// }

// =========================================================================
// MODELO DE EXPOSITOR/PROPIETARIO
// =========================================================================

// model Expositor {
//   id          String   @id @default(cuid())
//   nombre      String
//   apellido    String?
//   empresa     String?
//   telefono    String?
//   email       String?
//   direccion   String?
//   documento   String?  // Cédula o NIT
//   companyId   String   // Pertenece a una compañía
//   company     Company  @relation(fields: [companyId], references: [id])
//   createdAt   DateTime @default(now())
//   updatedAt   DateTime @updatedAt
  
//   // Relaciones futuras
//   ganado        Ganado[]
//   participantes Participante[]
//   products      Product[]

//   @@index([companyId])
//   @@map("expositores")
// }

// =========================================================================
// MODELO DE GANADO MEJORADO
// =========================================================================

// model Ganado {
//   id           String      @id @default(cuid())
//   nombre       String
//   slug         String      @unique
//   fechaNac     DateTime?
//   categoria    String?     // Campo para compatibilidad
//   subcategoria String?     // Campo para compatibilidad
//   establo      String?
//   remate       Boolean?
//   descripcion  String?
//   raza         String?
//   sexo         SexoGanado
//   numRegistro  String?      
//   puntaje      Int?
//   peso         Decimal?    @db.Decimal(8, 2)
//   isFeatured   Boolean     @default(false)
//   isPublished  Boolean     @default(false)
//   isGanadora   Boolean     @default(false)
//   premios      String[]
  
//   // Relación con expositor
//   expositorId  String?
//   expositor    Expositor?  @relation(fields: [expositorId], references: [id])
  
//   createdAt    DateTime    @default(now())
//   updatedAt    DateTime    @updatedAt

//   // Relaciones
//   GanadoImage   GanadoImage[]
//   participantes Participante[]

//   @@index([expositorId])
//   @@map("ganado")
// }

// =========================================================================
// MODELO DE PRODUCTO MEJORADO PARA CONCURSOS
// =========================================================================

// model Product {
//   id           String      @id @default(cuid())
//   name         String
//   slug         String      @unique
//   description  String?     @db.Text
//   price        Float?      // Opcional para productos de concurso
//   comparePrice Float?
//   images       String[]
//   videos       String[]
//   ingredients  String?     @db.Text
  
//   // Campos específicos para concursos
//   origen       String?     // Origen del producto
//   proceso      String?     // Proceso de elaboración
//   certificaciones String[] // Certificaciones del producto
  
//   companyId    String      // Pertenece a una compañía
//   company      Company     @relation(fields: [companyId], references: [id])
//   categoryId   String?     // Categoría general del producto
//   expositorId  String?     // Relación con expositor
  
//   // Relaciones futuras
//   variants     Variant[]
//   attributes   Attribute[]
//   participantes Participante[] // Productos que participan en concursos
  
//   isFeatured   Boolean     @default(false)
//   isPublished  Boolean     @default(false)
//   stock        Int         @default(0)
//   createdAt    DateTime    @default(now())
//   updatedAt    DateTime    @updatedAt

//   category  Category?  @relation(fields: [categoryId], references: [id])
//   expositor Expositor? @relation(fields: [expositorId], references: [id])

//   @@index([companyId])
//   @@index([categoryId])
//   @@index([expositorId])
//   @@map("products")
// }

// =========================================================================
// MODELO DE PARTICIPANTE MEJORADO
// =========================================================================

// model Participante {
//   id           String    @id @default(cuid())
//   numeroFicha  String
  
//   // Información del participante/expositor
//   expositorId  String?
//   expositor    Expositor? @relation(fields: [expositorId], references: [id])
  
//   // Para compatibilidad con sistema anterior
//   propietario  String?
//   telefono     String?
//   email        String?
  
//   concursoId   String
//   concurso     Concurso  @relation(fields: [concursoId], references: [id])
//   categoriaId  String
//   categoria    ConcursoCategoria @relation(fields: [categoriaId], references: [id])
  
//   // Relación polimórfica: puede ser ganado o producto
//   ganadoId     String?
//   ganado       Ganado?   @relation(fields: [ganadoId], references: [id])
//   productId    String?
//   product      Product?  @relation(fields: [productId], references: [id])
  
//   // Información de la participación
//   posicion     Int?      // Posición obtenida
//   puntaje      Float?    // Puntaje obtenido
//   observaciones String?
  
//   registradoPor String
//   registrador  User      @relation(fields: [registradoPor], references: [id])
//   createdAt    DateTime  @default(now())
//   updatedAt    DateTime  @updatedAt

//   @@unique([concursoId, numeroFicha])
//   @@index([expositorId])
//   @@index([ganadoId])
//   @@index([productId])
//   @@map("participantes")
// }

// =========================================================================
// MODELOS DE CATEGORÍAS (FUTURO)
// =========================================================================

// model Category {
//   id          String       @id @default(cuid())
//   name        String
//   slug        String       @unique
//   description String?      @db.Text
//   image       String?
//   parentId    String?
//   parent      Category?    @relation("SubCategories", fields: [parentId], references: [id])
//   subCategories Category[] @relation("SubCategories")
//   featured    Boolean      @default(false)
//   companyId   String       // Categorías por compañía
//   company     Company      @relation(fields: [companyId], references: [id])
//   createdAt   DateTime     @default(now())
//   updatedAt   DateTime     @updatedAt

//   Product Product[]

//   @@index([companyId])
//   @@map("categories")
// }

// =========================================================================
// MODELOS DE EVENTOS (FUTURO)
// =========================================================================

// model Event {
//   id          String      @id @default(cuid())
//   titulo      String
//   slug        String      @unique
//   descripcion String?
//   tipo        TipoEvento
//   fechaInicio DateTime
//   fechaFin    DateTime?
//   ubicacion   String?
//   direccion   String?
//   precio      Decimal?    @db.Decimal(10, 2)
//   capacidad   Int?
//   imagen      String?
//   isFeatured  Boolean     @default(false)
//   isPublished Boolean     @default(false)
//   companyId   String
//   company     Company     @relation(fields: [companyId], references: [id], onDelete: Cascade)
//   concursoId  String?     // Opcional: evento asociado a un concurso
//   concurso    Concurso?   @relation(fields: [concursoId], references: [id])
//   createdById String
//   createdBy   User        @relation(fields: [createdById], references: [id])
//   createdAt   DateTime    @default(now())
//   updatedAt   DateTime    @updatedAt

//   @@index([companyId])
//   @@index([concursoId])
//   @@map("events")
// }

// =========================================================================
// MODELOS DE CONTACTO EMPRESARIAL (FUTURO)
// =========================================================================

// model Contact {
//   id          String   @id @default(cuid())
//   nombre      String
//   apellido    String?
//   cargo       String?
//   telefono    String?
//   email       String?
//   whatsapp    String?
//   linkedin    String?
//   descripcion String?
//   isPrimary   Boolean  @default(false) // Contacto principal
//   isPublic    Boolean  @default(true)  // Visible públicamente
//   companyId   String
//   company     Company  @relation(fields: [companyId], references: [id], onDelete: Cascade)
//   createdById String
//   createdBy   User     @relation(fields: [createdById], references: [id])
//   createdAt   DateTime @default(now())
//   updatedAt   DateTime @updatedAt

//   @@index([companyId])
//   @@map("contacts")
// }
